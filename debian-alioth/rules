#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PACKAGE = brlcad
SRC_VERSION := $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(.*\)-.*/\1/p')
SVN_REVISION := $(shell echo $(SRC_VERSION) | awk -F"+" '{ print $$3 }' | sed 's/svn//' )
PKG_VERSION := $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(.*\)-.*/\1/p'| sed 's/+dfsg//')
TARBALL = $(PACKAGE)_$(SRC_VERSION).orig.tar.gz



# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
CROSS= --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
else
CROSS= --build $(DEB_BUILD_GNU_TYPE)
endif

include /usr/share/quilt/quilt.make

get-orig-source:
	rm -rf get-orig-source $(TARBALL)
	mkdir get-orig-source
	#svn export -r $(SVN_REVISION) https://brlcad.svn.sourceforge.net/svnroot/brlcad/brlcad/trunk get-orig-source/$(PACKAGE)-$(SRC_VERSION).orig
	wget -P get-orig-source http://dl.sourceforge.net/sourceforge/brlcad/brlcad-$(PKG_VERSION).tar.gz
	cd get-orig-source; tar -xzf brlcad-$(PKG_VERSION).tar.gz
	mv get-orig-source/brlcad-$(PKG_VERSION) get-orig-source/brlcad-$(SRC_VERSION).orig
	cd get-orig-source/$(PACKAGE)-$(SRC_VERSION).orig/ && rm -r misc/macosx/ && sed -e /macosx/d misc/Makefile.am > misc/Makefile.am.tmp \
		&& sed -e /macosx/d configure.ac > configure.ac.tmp && mv configure.ac.tmp configure.ac \
		&& mv misc/Makefile.am.tmp misc/Makefile.am && sh autogen.sh && rm -rf autom4te.cache/ misc/enigma/autom4te.cache/ \
		src/other/tk/unix/autom4te.cache src/other/tcl/unix/autom4te.cache include/brlcad_config.h.in~ \
		misc/enigma/config.h.in~ misc/ylwrap src/other/tkhtml3/autom4te.cache/
	GZIP=--best tar czf $(TARBALL) -C get-orig-source $(PACKAGE)-$(SRC_VERSION).orig
	rm -rf get-orig-source
	echo "  "$(TARBALL)" created; move it to the right destination to build the package"


config.status: configure
	dh_testdir
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	./configure $(CROSS) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info --libdir=\$${prefix}/lib/brlcad --includedir=\$${prefix}/include/brlcad --datadir=\$${prefix}/share/brlcad --bindir=/var/lib/brlcad CFLAGS="$(CFLAGS)" CXXFLAGS="$(CXXFLAGS)" LDFLAGS="-Wl,-z,defs,-lstdc++,-lm,-lXi,-ldl,-litcl3.2,-lBLT,-lpthread,-lpng12" --disable-docs --disable-almost-everything --enable-opennurbs-build --enable-urt-build --enable-optimized --enable-runtime-debug --with-gnu-ld=yes --with-tcl=/usr/share/tcltk/tcl8.4/ --with-jdk=/usr/lib/jvm/java-6-openjdk/include --with-tk=/usr/share/tcltk/tk8.4/ --with-tkinclude=/usr/include/tcl8.4/ --with-cflags="-I/usr/include/tcl8.4 -I/usr/include/jama -I/usr/lib/jvm/java-6-openjdk/include" --with-cppflags="-I/usr/include/tcl8.4 -I/usr/include/jama -I/usr/lib/jvm/java-6-openjdk/include"


build: build-stamp

build-stamp:  $(QUILT_STAMPFN) config.status
	dh_testdir
	$(MAKE)
	#docbook-to-man debian/brlcad.sgml > brlcad.1
	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp 
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f config.sub config.guess src/other/tk/unix/config.status src/other/tcl/unix/config.status
	dh_clean  --exclude ./src/other/libz/Makefile.orig --exclude ./src/other/libz/Makefile.in.orig --exclude ./src/other/openNURBS/opennurbs_array_defs.h.orig --exclude ./src/other/openNURBS/opennurbs_brep_io.cpp.orig

install: build
	dh_testdir
	dh_testroot
	dh_prep  --exclude ./src/other/libz/Makefile.orig --exclude ./src/other/libz/Makefile.in.orig --exclude ./src/other/openNURBS/opennurbs_array_defs.h.orig --exclude ./src/other/openNURBS/opennurbs_brep_io.cpp.orig
	dh_installdirs
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install
	#chrpath -d -k $(CURDIR)/debian/tmp/usr/lib/brlcad/lib*.so*


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	rm -f debian/tmp/usr/share/brlcad/COPYING
	dh_installchangelogs -i ChangeLog
	dh_installdocs -i
	dh_installexamples -i
	dh_install -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -s
	dh_testroot -s
	dh_installchangelogs -s ChangeLog
	dh_installdocs -s
	dh_installexamples -s
	dh_install -pbrlcad debian/brlcad.desktop usr/share/applications/
	dh_install --sourcedir=$(CURDIR)/debian/tmp
	dh_lintian -s
	rm -f debian/brlcad/usr/share/man/man1/brlcad-config.1
	rm -f debian/brlcad/var/lib/brlcad/brlcad-config
	dh_installman -s
	dh_installmenu -s
	dh_desktop -s
	dh_link -s
	dh_strip -s
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install get-orig-source 
